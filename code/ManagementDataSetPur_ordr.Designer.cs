//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9151
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace store_management {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ManagementDataSetPur_ordr")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class ManagementDataSetPur_ordr : global::System.Data.DataSet {
        
        private Purchase_ordrDataTable tablePurchase_ordr;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ManagementDataSetPur_ordr() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected ManagementDataSetPur_ordr(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Purchase_ordr"] != null)) {
                    base.Tables.Add(new Purchase_ordrDataTable(ds.Tables["Purchase_ordr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Purchase_ordrDataTable Purchase_ordr {
            get {
                return this.tablePurchase_ordr;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            ManagementDataSetPur_ordr cln = ((ManagementDataSetPur_ordr)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Purchase_ordr"] != null)) {
                    base.Tables.Add(new Purchase_ordrDataTable(ds.Tables["Purchase_ordr"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePurchase_ordr = ((Purchase_ordrDataTable)(base.Tables["Purchase_ordr"]));
            if ((initTable == true)) {
                if ((this.tablePurchase_ordr != null)) {
                    this.tablePurchase_ordr.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "ManagementDataSetPur_ordr";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/ManagementDataSetPur_ordr.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePurchase_ordr = new Purchase_ordrDataTable();
            base.Tables.Add(this.tablePurchase_ordr);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePurchase_ordr() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ManagementDataSetPur_ordr ds = new ManagementDataSetPur_ordr();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Purchase_ordrRowChangeEventHandler(object sender, Purchase_ordrRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Purchase_ordrDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPur_ordr_no;
            
            private global::System.Data.DataColumn columnPur_date;
            
            private global::System.Data.DataColumn columnSup_no;
            
            private global::System.Data.DataColumn columnSup_name;
            
            private global::System.Data.DataColumn columnCompany;
            
            private global::System.Data.DataColumn columnItem_code;
            
            private global::System.Data.DataColumn columnItem_name;
            
            private global::System.Data.DataColumn columnSize_Type;
            
            private global::System.Data.DataColumn columnBrand;
            
            private global::System.Data.DataColumn columnQuantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrDataTable() {
                this.TableName = "Purchase_ordr";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Purchase_ordrDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Purchase_ordrDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pur_ordr_noColumn {
                get {
                    return this.columnPur_ordr_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Pur_dateColumn {
                get {
                    return this.columnPur_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sup_noColumn {
                get {
                    return this.columnSup_no;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sup_nameColumn {
                get {
                    return this.columnSup_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CompanyColumn {
                get {
                    return this.columnCompany;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_codeColumn {
                get {
                    return this.columnItem_code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Item_nameColumn {
                get {
                    return this.columnItem_name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Size_TypeColumn {
                get {
                    return this.columnSize_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BrandColumn {
                get {
                    return this.columnBrand;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QuantityColumn {
                get {
                    return this.columnQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrRow this[int index] {
                get {
                    return ((Purchase_ordrRow)(this.Rows[index]));
                }
            }
            
            public event Purchase_ordrRowChangeEventHandler Purchase_ordrRowChanging;
            
            public event Purchase_ordrRowChangeEventHandler Purchase_ordrRowChanged;
            
            public event Purchase_ordrRowChangeEventHandler Purchase_ordrRowDeleting;
            
            public event Purchase_ordrRowChangeEventHandler Purchase_ordrRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPurchase_ordrRow(Purchase_ordrRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrRow AddPurchase_ordrRow(string Pur_ordr_no, System.DateTime Pur_date, string Sup_no, string Sup_name, string Company, string Item_code, string Item_name, string Size_Type, string Brand, long Quantity) {
                Purchase_ordrRow rowPurchase_ordrRow = ((Purchase_ordrRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Pur_ordr_no,
                        Pur_date,
                        Sup_no,
                        Sup_name,
                        Company,
                        Item_code,
                        Item_name,
                        Size_Type,
                        Brand,
                        Quantity};
                rowPurchase_ordrRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPurchase_ordrRow);
                return rowPurchase_ordrRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrRow FindByPur_ordr_no(string Pur_ordr_no) {
                return ((Purchase_ordrRow)(this.Rows.Find(new object[] {
                            Pur_ordr_no})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Purchase_ordrDataTable cln = ((Purchase_ordrDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Purchase_ordrDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPur_ordr_no = base.Columns["Pur_ordr_no"];
                this.columnPur_date = base.Columns["Pur_date"];
                this.columnSup_no = base.Columns["Sup_no"];
                this.columnSup_name = base.Columns["Sup_name"];
                this.columnCompany = base.Columns["Company"];
                this.columnItem_code = base.Columns["Item_code"];
                this.columnItem_name = base.Columns["Item_name"];
                this.columnSize_Type = base.Columns["Size_Type"];
                this.columnBrand = base.Columns["Brand"];
                this.columnQuantity = base.Columns["Quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPur_ordr_no = new global::System.Data.DataColumn("Pur_ordr_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPur_ordr_no);
                this.columnPur_date = new global::System.Data.DataColumn("Pur_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPur_date);
                this.columnSup_no = new global::System.Data.DataColumn("Sup_no", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSup_no);
                this.columnSup_name = new global::System.Data.DataColumn("Sup_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSup_name);
                this.columnCompany = new global::System.Data.DataColumn("Company", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany);
                this.columnItem_code = new global::System.Data.DataColumn("Item_code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_code);
                this.columnItem_name = new global::System.Data.DataColumn("Item_name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItem_name);
                this.columnSize_Type = new global::System.Data.DataColumn("Size_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSize_Type);
                this.columnBrand = new global::System.Data.DataColumn("Brand", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrand);
                this.columnQuantity = new global::System.Data.DataColumn("Quantity", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPur_ordr_no}, true));
                this.columnPur_ordr_no.AllowDBNull = false;
                this.columnPur_ordr_no.Unique = true;
                this.columnPur_ordr_no.MaxLength = 50;
                this.columnPur_date.AllowDBNull = false;
                this.columnSup_no.AllowDBNull = false;
                this.columnSup_no.MaxLength = 50;
                this.columnSup_name.AllowDBNull = false;
                this.columnSup_name.MaxLength = 50;
                this.columnCompany.AllowDBNull = false;
                this.columnCompany.MaxLength = 50;
                this.columnItem_code.AllowDBNull = false;
                this.columnItem_code.MaxLength = 50;
                this.columnItem_name.AllowDBNull = false;
                this.columnItem_name.MaxLength = 50;
                this.columnSize_Type.AllowDBNull = false;
                this.columnSize_Type.MaxLength = 50;
                this.columnBrand.AllowDBNull = false;
                this.columnBrand.MaxLength = 50;
                this.columnQuantity.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrRow NewPurchase_ordrRow() {
                return ((Purchase_ordrRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Purchase_ordrRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Purchase_ordrRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Purchase_ordrRowChanged != null)) {
                    this.Purchase_ordrRowChanged(this, new Purchase_ordrRowChangeEvent(((Purchase_ordrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Purchase_ordrRowChanging != null)) {
                    this.Purchase_ordrRowChanging(this, new Purchase_ordrRowChangeEvent(((Purchase_ordrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Purchase_ordrRowDeleted != null)) {
                    this.Purchase_ordrRowDeleted(this, new Purchase_ordrRowChangeEvent(((Purchase_ordrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Purchase_ordrRowDeleting != null)) {
                    this.Purchase_ordrRowDeleting(this, new Purchase_ordrRowChangeEvent(((Purchase_ordrRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePurchase_ordrRow(Purchase_ordrRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ManagementDataSetPur_ordr ds = new ManagementDataSetPur_ordr();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Purchase_ordrDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Purchase_ordrRow : global::System.Data.DataRow {
            
            private Purchase_ordrDataTable tablePurchase_ordr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Purchase_ordrRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePurchase_ordr = ((Purchase_ordrDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Pur_ordr_no {
                get {
                    return ((string)(this[this.tablePurchase_ordr.Pur_ordr_noColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Pur_ordr_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Pur_date {
                get {
                    return ((global::System.DateTime)(this[this.tablePurchase_ordr.Pur_dateColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Pur_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sup_no {
                get {
                    return ((string)(this[this.tablePurchase_ordr.Sup_noColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Sup_noColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sup_name {
                get {
                    return ((string)(this[this.tablePurchase_ordr.Sup_nameColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Sup_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company {
                get {
                    return ((string)(this[this.tablePurchase_ordr.CompanyColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.CompanyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_code {
                get {
                    return ((string)(this[this.tablePurchase_ordr.Item_codeColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Item_codeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Item_name {
                get {
                    return ((string)(this[this.tablePurchase_ordr.Item_nameColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Item_nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Size_Type {
                get {
                    return ((string)(this[this.tablePurchase_ordr.Size_TypeColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.Size_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Brand {
                get {
                    return ((string)(this[this.tablePurchase_ordr.BrandColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.BrandColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Quantity {
                get {
                    return ((long)(this[this.tablePurchase_ordr.QuantityColumn]));
                }
                set {
                    this[this.tablePurchase_ordr.QuantityColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Purchase_ordrRowChangeEvent : global::System.EventArgs {
            
            private Purchase_ordrRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrRowChangeEvent(Purchase_ordrRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Purchase_ordrRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace store_management.ManagementDataSetPur_ordrTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Purchase_ordrTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Purchase_ordrTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Purchase_ordr";
            tableMapping.ColumnMappings.Add("Pur_ordr_no", "Pur_ordr_no");
            tableMapping.ColumnMappings.Add("Pur_date", "Pur_date");
            tableMapping.ColumnMappings.Add("Sup_no", "Sup_no");
            tableMapping.ColumnMappings.Add("Sup_name", "Sup_name");
            tableMapping.ColumnMappings.Add("Company", "Company");
            tableMapping.ColumnMappings.Add("Item_code", "Item_code");
            tableMapping.ColumnMappings.Add("Item_name", "Item_name");
            tableMapping.ColumnMappings.Add("Size_Type", "Size_Type");
            tableMapping.ColumnMappings.Add("Brand", "Brand");
            tableMapping.ColumnMappings.Add("Quantity", "Quantity");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Purchase_ordr] WHERE (([Pur_ordr_no] = @Original_Pur_ordr_no) AND ([Pur_date] = @Original_Pur_date) AND ([Sup_no] = @Original_Sup_no) AND ([Sup_name] = @Original_Sup_name) AND ([Company] = @Original_Company) AND ([Item_code] = @Original_Item_code) AND ([Item_name] = @Original_Item_name) AND ([Size_Type] = @Original_Size_Type) AND ([Brand] = @Original_Brand) AND ([Quantity] = @Original_Quantity))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pur_ordr_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_ordr_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pur_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sup_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sup_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Brand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Brand", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Purchase_ordr] ([Pur_ordr_no], [Pur_date], [Sup_no], [Sup_name], [Company], [Item_code], [Item_name], [Size_Type], [Brand], [Quantity]) VALUES (@Pur_ordr_no, @Pur_date, @Sup_no, @Sup_name, @Company, @Item_code, @Item_name, @Size_Type, @Brand, @Quantity);
SELECT Pur_ordr_no, Pur_date, Sup_no, Sup_name, Company, Item_code, Item_name, Size_Type, Brand, Quantity FROM Purchase_ordr WHERE (Pur_ordr_no = @Pur_ordr_no)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pur_ordr_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_ordr_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pur_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sup_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sup_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Brand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Brand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Purchase_ordr] SET [Pur_ordr_no] = @Pur_ordr_no, [Pur_date] = @Pur_date, [Sup_no] = @Sup_no, [Sup_name] = @Sup_name, [Company] = @Company, [Item_code] = @Item_code, [Item_name] = @Item_name, [Size_Type] = @Size_Type, [Brand] = @Brand, [Quantity] = @Quantity WHERE (([Pur_ordr_no] = @Original_Pur_ordr_no) AND ([Pur_date] = @Original_Pur_date) AND ([Sup_no] = @Original_Sup_no) AND ([Sup_name] = @Original_Sup_name) AND ([Company] = @Original_Company) AND ([Item_code] = @Original_Item_code) AND ([Item_name] = @Original_Item_name) AND ([Size_Type] = @Original_Size_Type) AND ([Brand] = @Original_Brand) AND ([Quantity] = @Original_Quantity));
SELECT Pur_ordr_no, Pur_date, Sup_no, Sup_name, Company, Item_code, Item_name, Size_Type, Brand, Quantity FROM Purchase_ordr WHERE (Pur_ordr_no = @Pur_ordr_no)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pur_ordr_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_ordr_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Pur_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_date", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sup_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_no", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sup_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Size_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Brand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Brand", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quantity", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pur_ordr_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_ordr_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Pur_date", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Pur_date", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sup_no", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_no", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sup_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sup_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Company", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Company", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_code", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_code", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Item_name", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Item_name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Size_Type", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Size_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Brand", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Brand", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quantity", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quantity", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::store_management.Properties.Settings.Default.ManagementConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Pur_ordr_no, Pur_date, Sup_no, Sup_name, Company, Item_code, Item_name, Si" +
                "ze_Type, Brand, Quantity FROM dbo.Purchase_ordr";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(ManagementDataSetPur_ordr.Purchase_ordrDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual ManagementDataSetPur_ordr.Purchase_ordrDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            ManagementDataSetPur_ordr.Purchase_ordrDataTable dataTable = new ManagementDataSetPur_ordr.Purchase_ordrDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagementDataSetPur_ordr.Purchase_ordrDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(ManagementDataSetPur_ordr dataSet) {
            return this.Adapter.Update(dataSet, "Purchase_ordr");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_Pur_ordr_no, System.DateTime Original_Pur_date, string Original_Sup_no, string Original_Sup_name, string Original_Company, string Original_Item_code, string Original_Item_name, string Original_Size_Type, string Original_Brand, long Original_Quantity) {
            if ((Original_Pur_ordr_no == null)) {
                throw new global::System.ArgumentNullException("Original_Pur_ordr_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_Pur_ordr_no));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Pur_date));
            if ((Original_Sup_no == null)) {
                throw new global::System.ArgumentNullException("Original_Sup_no");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Sup_no));
            }
            if ((Original_Sup_name == null)) {
                throw new global::System.ArgumentNullException("Original_Sup_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Sup_name));
            }
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Company));
            }
            if ((Original_Item_code == null)) {
                throw new global::System.ArgumentNullException("Original_Item_code");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Item_code));
            }
            if ((Original_Item_name == null)) {
                throw new global::System.ArgumentNullException("Original_Item_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Item_name));
            }
            if ((Original_Size_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Size_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Size_Type));
            }
            if ((Original_Brand == null)) {
                throw new global::System.ArgumentNullException("Original_Brand");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Brand));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((long)(Original_Quantity));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Pur_ordr_no, System.DateTime Pur_date, string Sup_no, string Sup_name, string Company, string Item_code, string Item_name, string Size_Type, string Brand, long Quantity) {
            if ((Pur_ordr_no == null)) {
                throw new global::System.ArgumentNullException("Pur_ordr_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Pur_ordr_no));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Pur_date));
            if ((Sup_no == null)) {
                throw new global::System.ArgumentNullException("Sup_no");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Sup_no));
            }
            if ((Sup_name == null)) {
                throw new global::System.ArgumentNullException("Sup_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Sup_name));
            }
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Company));
            }
            if ((Item_code == null)) {
                throw new global::System.ArgumentNullException("Item_code");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Item_code));
            }
            if ((Item_name == null)) {
                throw new global::System.ArgumentNullException("Item_name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Item_name));
            }
            if ((Size_Type == null)) {
                throw new global::System.ArgumentNullException("Size_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Size_Type));
            }
            if ((Brand == null)) {
                throw new global::System.ArgumentNullException("Brand");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Brand));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((long)(Quantity));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Pur_ordr_no, 
                    System.DateTime Pur_date, 
                    string Sup_no, 
                    string Sup_name, 
                    string Company, 
                    string Item_code, 
                    string Item_name, 
                    string Size_Type, 
                    string Brand, 
                    long Quantity, 
                    string Original_Pur_ordr_no, 
                    System.DateTime Original_Pur_date, 
                    string Original_Sup_no, 
                    string Original_Sup_name, 
                    string Original_Company, 
                    string Original_Item_code, 
                    string Original_Item_name, 
                    string Original_Size_Type, 
                    string Original_Brand, 
                    long Original_Quantity) {
            if ((Pur_ordr_no == null)) {
                throw new global::System.ArgumentNullException("Pur_ordr_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Pur_ordr_no));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Pur_date));
            if ((Sup_no == null)) {
                throw new global::System.ArgumentNullException("Sup_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Sup_no));
            }
            if ((Sup_name == null)) {
                throw new global::System.ArgumentNullException("Sup_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Sup_name));
            }
            if ((Company == null)) {
                throw new global::System.ArgumentNullException("Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Company));
            }
            if ((Item_code == null)) {
                throw new global::System.ArgumentNullException("Item_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Item_code));
            }
            if ((Item_name == null)) {
                throw new global::System.ArgumentNullException("Item_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Item_name));
            }
            if ((Size_Type == null)) {
                throw new global::System.ArgumentNullException("Size_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Size_Type));
            }
            if ((Brand == null)) {
                throw new global::System.ArgumentNullException("Brand");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Brand));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(Quantity));
            if ((Original_Pur_ordr_no == null)) {
                throw new global::System.ArgumentNullException("Original_Pur_ordr_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Pur_ordr_no));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Pur_date));
            if ((Original_Sup_no == null)) {
                throw new global::System.ArgumentNullException("Original_Sup_no");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Sup_no));
            }
            if ((Original_Sup_name == null)) {
                throw new global::System.ArgumentNullException("Original_Sup_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Sup_name));
            }
            if ((Original_Company == null)) {
                throw new global::System.ArgumentNullException("Original_Company");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_Company));
            }
            if ((Original_Item_code == null)) {
                throw new global::System.ArgumentNullException("Original_Item_code");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Item_code));
            }
            if ((Original_Item_name == null)) {
                throw new global::System.ArgumentNullException("Original_Item_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_Item_name));
            }
            if ((Original_Size_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Size_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Size_Type));
            }
            if ((Original_Brand == null)) {
                throw new global::System.ArgumentNullException("Original_Brand");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Brand));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(Original_Quantity));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Pur_date, 
                    string Sup_no, 
                    string Sup_name, 
                    string Company, 
                    string Item_code, 
                    string Item_name, 
                    string Size_Type, 
                    string Brand, 
                    long Quantity, 
                    string Original_Pur_ordr_no, 
                    System.DateTime Original_Pur_date, 
                    string Original_Sup_no, 
                    string Original_Sup_name, 
                    string Original_Company, 
                    string Original_Item_code, 
                    string Original_Item_name, 
                    string Original_Size_Type, 
                    string Original_Brand, 
                    long Original_Quantity) {
            return this.Update(Original_Pur_ordr_no, Pur_date, Sup_no, Sup_name, Company, Item_code, Item_name, Size_Type, Brand, Quantity, Original_Pur_ordr_no, Original_Pur_date, Original_Sup_no, Original_Sup_name, Original_Company, Original_Item_code, Original_Item_name, Original_Size_Type, Original_Brand, Original_Quantity);
        }
    }
}

#pragma warning restore 1591